group = 'com.github.antilaby'
version = '2.0-pre3'

// Apply the java-library plugin to add support for Java Library
apply plugin: 'java'

// Apply IDE plugins for easy build
apply plugin: 'eclipse'

// For Heisluft
apply plugin: 'maven-publish'

sourceCompatibility = 1.8

repositories {
    // For Spigot
    mavenLocal()
    // For JUnit
    mavenCentral()
    // For ProtocolLib
    maven {
        url 'http://repo.dmulloy2.net/content/groups/public/'
    }
    // For HLS
    maven {
        url 'http://heisluft.bplaced.net/maven/'
    }
}

processResources {
    from(sourceSets.main.resources.srcDirs) {
        exclude 'plugin.yml'
    }
    from(sourceSets.main.resources.srcDirs) {
        include 'plugin.yml'
        expand("version": project.version, "name": project.name)
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

dependencies {
    compileOnly 'de.heisluft:HeisluftsLanguageSystem:1.0.0'
    compileOnly('com.comphenix.protocol:ProtocolLib-API:4.4.0-SNAPSHOT') {
        transitive = false
    }
    compileOnly 'org.spigotmc:spigot:1.12.2-R0.1-SNAPSHOT'
    testCompile 'org.junit.jupiter:junit-jupiter-api:5.2.0'
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

publishing {
    def server = System.getProperty("maven")
    if (server == null) return
    repositories {
        maven {
            url server
        }
    }
    publications {
        testing(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
        }
    }

}

publish.dependsOn jar, sourcesJar, javadocJar

task copyToServer(type: Copy, dependsOn: jar) {
    def ts = System.getProperty("serverDir")
    if (ts == null) return
    ts.replace('\\', '/')
    ts += (!ts.endsWith('/') ? '/' : "").concat("plugins")
    from jar
    into ts
}