group = 'com.github.antilaby'
version = '2.0-pre3'

// Apply the java-library plugin to add support for Java Library
apply plugin: 'java'

// Apply IDE plugins for easy build
apply plugin: 'eclipse'

// For Heisluft
apply plugin: 'maven-publish'
apply plugin: 'signing'

sourceCompatibility = 1.8

repositories {
    // For Spigot
    mavenLocal()
    // For GlowStone
    maven {
        url 'https://repo.glowstone.net/content/repositories/snapshots/'
    }
    // For JUnit
    mavenCentral()
    // For ProtocolLib
    maven {
        url 'http://repo.dmulloy2.net/content/groups/public/'
    }
    // For HLS
    maven {
        url 'http://heisluft.bplaced.net/maven/'
    }
}

processResources {
    from(sourceSets.main.resources.srcDirs) {
        exclude 'plugin.yml'
    }
    from(sourceSets.main.resources.srcDirs) {
        include 'plugin.yml'
        expand("version": project.version, "name": project.name)
    }
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

task javadocJar(type: Jar) {
    from javadoc
    classifier = 'javadoc'
}

dependencies {
    compile 'com.github.zafarkhaja:java-semver:0.9.0'
    compile 'net.glowstone:glowstone:2018.8.0-SNAPSHOT'
    compile('com.comphenix.protocol:ProtocolLib-API:4.4.0-SNAPSHOT') {
        transitive = false
    }
    compile 'org.spigotmc:spigot:1.12.2-R0.1-SNAPSHOT'
    testCompile 'org.junit.jupiter:junit-jupiter-api:5.3.1'
}

publishing {
    repositories {
        maven {
            url = mavenRepo
            credentials {
                username = mavenUsername
                password = mavenPassword
            }
            authentication {
                digest(DigestAuthentication)
            }

        }
    }
    publications {
        mavenJava(MavenPublication) {
            pom {
                description = project.description
                url = 'https://www.spigotmc.org/resources/antilaby-1-8-1-12-1-disable-labymod-functions-api.21347'
                licenses {
                    license {
                        name = 'GNU GPL, Version 3'
                        url = 'https://www.gnu.org/licenses/gpl.txt'
                    }
                }
                developers {
                    developer {
                        id = 'NathanNr'
                        name = 'NathanNr'
                        email = '[n/a]'
                        roles = ['developer']
                    }
                    developer {
                        id = 'heisluft'
                        name = 'heisluft'
                        email = 'heisluftlp@gmail.com'
                        roles = ['developer']
                    }
                }
                scm {
                    connection = 'scm:git:https://github.com/AntiLaby/AntiLaby'
                    developerConnection = 'scm:git:https://github.com/AntiLaby/AntiLaby'
                    url = 'https://github.com/AntiLaby/AntiLaby'
                }
            }
            from components.java
            artifact sourcesJar
            artifact javadocJar
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}

publish.dependsOn test

test {
    useJUnit()
}

build {
    doLast {
        test
    }
}

task copyToServer(type: Copy, dependsOn: jar) {
    def ts = System.getProperty("serverDir")
    if (ts == null) return
    ts.replace('\\', '/')
    ts += (!ts.endsWith('/') ? '/' : "").concat("plugins")
    from jar
    into ts
}